name: Frontend CI

on:
  pull_request:
    branches:
      - refactor
      - main
    paths:
      - 'ongoing/frontend/**'
      - '.github/workflows/frontend-ci.yml'
  push:
    branches:
      - refactor
      - main
    paths:
      - 'ongoing/frontend/**'

jobs:
  lint-and-typecheck:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ongoing/frontend/next-app/loghoi
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: ongoing/frontend/next-app/loghoi/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run ESLint
        run: npm run lint
      
      - name: Run TypeScript type check
        run: npx tsc --noEmit
      
      - name: Check for console.log statements
        run: |
          if grep -r "console.log" --include="*.ts" --include="*.tsx" app/ components/ lib/ hooks/ 2>/dev/null; then
            echo "⚠️ Warning: console.log statements found"
            exit 1
          fi

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ongoing/frontend/next-app/loghoi
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: ongoing/frontend/next-app/loghoi/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run unit tests
        run: npm run test -- --passWithNoTests
      
      - name: Run tests with coverage
        run: npm run test:coverage -- --passWithNoTests
      
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          files: ./ongoing/frontend/next-app/loghoi/coverage/lcov.info
          flags: frontend
          name: frontend-coverage
          fail_ci_if_error: false

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ongoing/frontend/next-app/loghoi
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: ongoing/frontend/next-app/loghoi/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium
      
      - name: Start backend services
        run: |
          cd ../../../../ongoing
          docker-compose -f docker-compose_fastapi.yml up -d
          sleep 10
      
      - name: Wait for backend to be ready
        run: |
          timeout 60 bash -c 'until curl -f http://localhost:7776/docs; do sleep 2; done'
      
      - name: Run E2E tests
        run: npm run test:e2e -- --project=chromium
        env:
          CI: true
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: ongoing/frontend/next-app/loghoi/playwright-report/
          retention-days: 30
      
      - name: Upload test videos
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-videos
          path: ongoing/frontend/next-app/loghoi/test-results/
          retention-days: 30
      
      - name: Stop backend services
        if: always()
        run: |
          cd ../../../../ongoing
          docker-compose -f docker-compose_fastapi.yml down

  build:
    name: Build Check
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ongoing/frontend/next-app/loghoi
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: ongoing/frontend/next-app/loghoi/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build application
        run: npm run build
      
      - name: Check build size
        run: |
          du -sh .next
          echo "Build completed successfully"

